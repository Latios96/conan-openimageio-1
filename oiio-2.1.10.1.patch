diff --git a/oiio-Release-2.1.10.0/CMakeLists.txt b/source_subfolder/CMakeLists.txt
index 94627c5..3a3c8b7 100644
--- a/oiio-Release-2.1.10.0/CMakeLists.txt
+++ b/source_subfolder/CMakeLists.txt
@@ -8,2 +8,4 @@ project (OpenImageIO VERSION 2.1.10.0
          LANGUAGES CXX C)
+include(${CMAKE_CURRENT_BINARY_DIR}/conanbuildinfo.cmake)
+conan_basic_setup()
 set (PROJ_NAME OIIO)    # short name, caps
@@ -157,3 +159,3 @@ if (OIIO_BUILD_TOOLS AND NOT BUILD_OIIOUTIL_ONLY)
     add_subdirectory (src/oiiotool)
-    add_subdirectory (src/testtex)
+    # add_subdirectory (src/testtex)
     add_subdirectory (src/iv)
@@ -462,3 +464,3 @@ if (WIN32)
     set(CPACK_NSIS_MODIFY_PATH ON)
-    include (InstallRequiredSystemLibraries)
+    # include (InstallRequiredSystemLibraries)
 endif ()
diff --git a/oiio-Release-2.1.10.0/src/cmake/compiler.cmake b/source_subfolder/src/cmake/compiler.cmake
index 5de9625..d380622 100644
--- a/oiio-Release-2.1.10.0/src/cmake/compiler.cmake
+++ b/source_subfolder/src/cmake/compiler.cmake
@@ -169,2 +169,3 @@ if (MSVC)
     add_compile_options (/W1)
+string(REPLACE " /W3 " " " CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
     add_definitions (-D_CRT_SECURE_NO_DEPRECATE)
diff --git a/oiio-Release-2.1.10.0/src/cmake/externalpackages.cmake b/source_subfolder/src/cmake/externalpackages.cmake
index 2f4f7ce..ae31327 100644
--- a/oiio-Release-2.1.10.0/src/cmake/externalpackages.cmake
+++ b/source_subfolder/src/cmake/externalpackages.cmake
@@ -123,6 +123,6 @@ option (BUILD_MISSING_DEPS "Try to download and build any missing dependencies"
 if (LINKSTATIC)
-    set (Boost_USE_STATIC_LIBS ON)
+    # set (Boost_USE_STATIC_LIBS ON)
 else ()
     if (MSVC)
-        add_definitions (-DBOOST_ALL_DYN_LINK=1)
+        # add_definitions (-DBOOST_ALL_DYN_LINK=1)
     endif ()
@@ -173,4 +173,4 @@ checked_find_package (OpenEXR 2.0 REQUIRED)
 # We use Imath so commonly, may as well include it everywhere.
-include_directories ("${OPENEXR_INCLUDES}" "${ILMBASE_INCLUDES}"
-                     "${ILMBASE_INCLUDES}/OpenEXR")
+include_directories(${OpenEXR_INCLUDE_DIRS})
+set(OPENEXR_LIBRARIES ${OpenEXR_LIBRARIES})
 if (CMAKE_COMPILER_IS_CLANG AND OPENEXR_VERSION VERSION_LESS 2.3)
@@ -180,3 +180,3 @@ endif ()
 if (MSVC AND NOT LINKSTATIC)
-    add_definitions (-DOPENEXR_DLL) # Is this needed for new versions?
+    # add_definitions (-DOPENEXR_DLL) # Is this needed for new versions?
 endif ()
@@ -235,3 +235,7 @@ checked_find_package (Libheif 1.3)  # For HEIF/HEIC format
 checked_find_package (LibRaw)
-checked_find_package (OpenJpeg)
+checked_find_package (OpenJPEG)
+set(OPENJPEG_FOUND ${OpenJPEG_FOUND})
+set(OPENJPEG_VERSION ${OpenJPEG_VERSION})
+set(OPENJPEG_INCLUDES ${OpenJPEG_INCLUDES})
+set(OPENJPEG_LIBRARIES ${OpenJPEG_LIBRARIES})
 checked_find_package (OpenVDB 5.0
@@ -256,3 +260,3 @@ endif ()
 option (USE_QT "Use Qt if found" ON)
-checked_find_package (Qt5 COMPONENTS ${qt5_modules})
+# checked_find_package (Qt5 COMPONENTS ${qt5_modules})
 if (USE_QT AND NOT Qt5_FOUND AND APPLE)
diff --git a/oiio-Release-2.1.10.0/src/cmake/oiio_macros.cmake b/source_subfolder/src/cmake/oiio_macros.cmake
index 9e54f67..c2545b6 100644
--- a/oiio-Release-2.1.10.0/src/cmake/oiio_macros.cmake
+++ b/source_subfolder/src/cmake/oiio_macros.cmake
@@ -186,2 +186,4 @@ endmacro ()
 macro (oiio_add_tests)
+endmacro ()
+macro (_DISABLED_oiio_add_tests)
     cmake_parse_arguments (_ats "" "" "URL;IMAGEDIR;LABEL;FOUNDVAR;TESTNAME" ${ARGN})
diff --git a/oiio-Release-2.1.10.0/src/libOpenImageIO/CMakeLists.txt b/source_subfolder/src/libOpenImageIO/CMakeLists.txt
index ef05fec..8bcecc1 100644
--- a/oiio-Release-2.1.10.0/src/libOpenImageIO/CMakeLists.txt
+++ b/source_subfolder/src/libOpenImageIO/CMakeLists.txt
@@ -139,3 +139,3 @@ target_link_libraries (OpenImageIO
             ${ILMBASE_LIBRARIES}
-            ${OPENEXR_LIBRARIES}
+            OpenEXR::OpenEXR
             ${OpenCV_LIBRARIES}
diff --git a/oiio-Release-2.1.10.0/src/libutil/CMakeLists.txt b/source_subfolder/src/libutil/CMakeLists.txt
index f5548bc..303e5ba 100644
--- a/oiio-Release-2.1.10.0/src/libutil/CMakeLists.txt
+++ b/source_subfolder/src/libutil/CMakeLists.txt
@@ -13,3 +13,3 @@ target_link_libraries (OpenImageIO_Util
         PUBLIC
-            ${ILMBASE_LIBRARIES}
+            OpenEXR::OpenEXR
             ${GCC_ATOMIC_LIBRARIES}
diff --git a/oiio-Release-2.1.10.0/src/nuke/txReader/CMakeLists.txt b/source_subfolder/src/nuke/txReader/CMakeLists.txt
index 71e6313..4d62dc1 100644
--- a/oiio-Release-2.1.10.0/src/nuke/txReader/CMakeLists.txt
+++ b/source_subfolder/src/nuke/txReader/CMakeLists.txt
@@ -11,3 +11,3 @@ if (WIN32)
         PREFIX ""
-        COMPILE_OPTIONS /wd4251 /W3 /O2 /MD /GL /GR /GF
+        COMPILE_OPTIONS /wd4251 /O2 /MD /GL /GR /GF
         LINK_FLAGS "/machine:x64 /SUBSYSTEM:WINDOWS /dll")
diff --git a/oiio-Release-2.1.10.0/src/nuke/txWriter/CMakeLists.txt b/source_subfolder/src/nuke/txWriter/CMakeLists.txt
index 1405d63..a3b50fe 100644
--- a/oiio-Release-2.1.10.0/src/nuke/txWriter/CMakeLists.txt
+++ b/source_subfolder/src/nuke/txWriter/CMakeLists.txt
@@ -14,3 +14,3 @@ if (WIN32)
         PREFIX ""
-        COMPILE_OPTIONS /wd4251 /W3 /O2 /MD /GL /GR /GF
+        COMPILE_OPTIONS /wd4251 /O2 /MD /GL /GR /GF
         LINK_FLAGS "/machine:x64 /SUBSYSTEM:WINDOWS /dll")
