diff --git a/oiio-Release-2.1.11.2/CMakeLists.txt b/source_subfolder/CMakeLists.txt
index 3253a3b..aacdcb5 100644
--- a/oiio-Release-2.1.11.2/CMakeLists.txt
+++ b/source_subfolder/CMakeLists.txt
@@ -7,4 +7,8 @@ project (OpenImageIO VERSION 2.1.11.2
          HOMEPAGE_URL "https://openimageio.org"
          LANGUAGES CXX C)
+
+include(${CMAKE_CURRENT_BINARY_DIR}/conanbuildinfo.cmake)
+conan_basic_setup()
+
 set (PROJ_NAME OIIO)    # short name, caps
 string (TOLOWER ${PROJ_NAME} PROJ_NAME_LOWER)  # short name lower case
@@ -172,5 +176,5 @@ if (OIIO_BUILD_TOOLS AND NOT BUILD_OIIOUTIL_ONLY)
     add_subdirectory (src/maketx)
     add_subdirectory (src/oiiotool)
-    add_subdirectory (src/testtex)
+    # add_subdirectory (src/testtex)
     add_subdirectory (src/iv)
 endif ()
@@ -478,5 +482,5 @@ if (WIN32)
 #    set(CPACK_CREATE_DESCTOP_LINKS "iv" "iv - Image Viewer")
     set(CPACK_NSIS_MODIFY_PATH ON)
-    include (InstallRequiredSystemLibraries)
+    # include (InstallRequiredSystemLibraries)
 endif ()
 set (CPACK_SOURCE_PACKAGE_FILE_NAME ${PROJECT_NAME}-${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}-source)
diff --git a/oiio-Release-2.1.11.2/src/cmake/compiler.cmake b/source_subfolder/src/cmake/compiler.cmake
index 0bc2cf7..846c2a1 100644
--- a/oiio-Release-2.1.11.2/src/cmake/compiler.cmake
+++ b/source_subfolder/src/cmake/compiler.cmake
@@ -168,4 +168,5 @@ if (MSVC)
     # Microsoft specific options
     add_compile_options (/W1)
+    string(REPLACE " /W3 " " " CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
     add_definitions (-D_CRT_SECURE_NO_DEPRECATE)
     add_definitions (-D_CRT_SECURE_NO_WARNINGS)
diff --git a/oiio-Release-2.1.11.2/src/cmake/externalpackages.cmake b/source_subfolder/src/cmake/externalpackages.cmake
index fc30448..56c1515 100644
--- a/oiio-Release-2.1.11.2/src/cmake/externalpackages.cmake
+++ b/source_subfolder/src/cmake/externalpackages.cmake
@@ -122,8 +122,8 @@ option (BUILD_MISSING_DEPS "Try to download and build any missing dependencies"
 # Boost setup
 if (LINKSTATIC)
-    set (Boost_USE_STATIC_LIBS ON)
+    # set (Boost_USE_STATIC_LIBS ON)
 else ()
     if (MSVC)
-        add_definitions (-DBOOST_ALL_DYN_LINK=1)
+        # add_definitions (-DBOOST_ALL_DYN_LINK=1)
     endif ()
 endif ()
@@ -172,6 +172,6 @@ checked_find_package (TIFF 3.0 REQUIRED)
 checked_find_package (OpenEXR 2.0 REQUIRED)
 # We use Imath so commonly, may as well include it everywhere.
-include_directories ("${OPENEXR_INCLUDES}" "${ILMBASE_INCLUDES}"
-                     "${ILMBASE_INCLUDES}/OpenEXR")
+include_directories ("${OpenEXR_INCLUDES}")
+set(OPENEXR_LIBRARIES ${OpenEXR_LIBRARIES})
 if (CMAKE_COMPILER_IS_CLANG AND OPENEXR_VERSION VERSION_LESS 2.3)
     # clang C++ >= 11 doesn't like 'register' keyword in old exr headers
@@ -179,5 +179,5 @@ if (CMAKE_COMPILER_IS_CLANG AND OPENEXR_VERSION VERSION_LESS 2.3)
 endif ()
 if (MSVC AND NOT LINKSTATIC)
-    add_definitions (-DOPENEXR_DLL) # Is this needed for new versions?
+    # add_definitions (-DOPENEXR_DLL) # Is this needed for new versions?
 endif ()
 
@@ -234,5 +234,9 @@ checked_find_package (GIF 4)
 checked_find_package (Libheif 1.3)  # For HEIF/HEIC format
 checked_find_package (LibRaw)
-checked_find_package (OpenJpeg)
+checked_find_package (OpenJPEG)
+set(OPENJPEG_FOUND ${OpenJPEG_FOUND})
+set(OPENJPEG_VERSION ${OpenJPEG_VERSION})
+set(OPENJPEG_INCLUDES ${OpenJPEG_INCLUDES})
+set(OPENJPEG_LIBRARIES ${OpenJPEG_LIBRARIES})
 checked_find_package (OpenVDB 5.0
                    DEPS         TBB
@@ -255,5 +259,5 @@ if (OPENGL_FOUND)
 endif ()
 option (USE_QT "Use Qt if found" ON)
-checked_find_package (Qt5 COMPONENTS ${qt5_modules})
+#checked_find_package (Qt5 COMPONENTS ${qt5_modules})
 if (USE_QT AND NOT Qt5_FOUND AND APPLE)
     message (STATUS "  If you think you installed qt5 with Homebrew and it still doesn't work,")
diff --git a/oiio-Release-2.1.11.2/src/cmake/oiio_macros.cmake b/source_subfolder/src/cmake/oiio_macros.cmake
index 1c8e783..e0dc83f 100644
--- a/oiio-Release-2.1.11.2/src/cmake/oiio_macros.cmake
+++ b/source_subfolder/src/cmake/oiio_macros.cmake
@@ -170,4 +170,6 @@ endmacro ()
 #
 macro (oiio_add_tests)
+endmacro()
+macro (_DISABLED_oiio_add_tests)
     cmake_parse_arguments (_ats "" "" "URL;IMAGEDIR;LABEL;FOUNDVAR;TESTNAME" ${ARGN})
        # Arguments: <prefix> <options> <one_value_keywords> <multi_value_keywords> args...
diff --git a/oiio-Release-2.1.11.2/src/libOpenImageIO/CMakeLists.txt b/source_subfolder/src/libOpenImageIO/CMakeLists.txt
index 8aed2c3..bf0f8a2 100644
--- a/oiio-Release-2.1.11.2/src/libOpenImageIO/CMakeLists.txt
+++ b/source_subfolder/src/libOpenImageIO/CMakeLists.txt
@@ -138,5 +138,5 @@ target_link_libraries (OpenImageIO
         PUBLIC
             ${ILMBASE_LIBRARIES}
-            ${OPENEXR_LIBRARIES}
+            OpenEXR::OpenEXR
             ${OpenCV_LIBRARIES}
             ${GCC_ATOMIC_LIBRARIES}
@@ -144,5 +144,5 @@ target_link_libraries (OpenImageIO
             ${SANITIZE_LIBRARIES}
             ${format_plugin_libs} # Add all the target link libraries from the plugins
-            ${OPENCOLORIO_LIBRARIES}
+            OpenColorIO::OpenColorIO
             ${BZIP2_LIBRARIES}
             ${ZLIB_LIBRARIES}
@@ -158,6 +158,6 @@ if (USE_EXTERNAL_PUGIXML)
 endif()
 
-if (FREETYPE_FOUND)
-    target_link_libraries (OpenImageIO PRIVATE ${FREETYPE_LIBRARIES})
+if (TARGET Freetype::Freetype)
+    target_link_libraries (OpenImageIO PRIVATE Freetype::Freetype)
 endif()
 
diff --git a/oiio-Release-2.1.11.2/src/libutil/CMakeLists.txt b/source_subfolder/src/libutil/CMakeLists.txt
index 11739cf..ca0201c 100644
--- a/oiio-Release-2.1.11.2/src/libutil/CMakeLists.txt
+++ b/source_subfolder/src/libutil/CMakeLists.txt
@@ -12,5 +12,5 @@ target_include_directories (OpenImageIO_Util
 target_link_libraries (OpenImageIO_Util
         PUBLIC
-            ${ILMBASE_LIBRARIES}
+        OpenEXR::OpenEXR
             ${GCC_ATOMIC_LIBRARIES}
         PRIVATE
diff --git a/oiio-Release-2.1.11.2/src/nuke/txReader/CMakeLists.txt b/source_subfolder/src/nuke/txReader/CMakeLists.txt
index 71e6313..4d62dc1 100644
--- a/oiio-Release-2.1.11.2/src/nuke/txReader/CMakeLists.txt
+++ b/source_subfolder/src/nuke/txReader/CMakeLists.txt
@@ -10,5 +10,5 @@ if (WIN32)
     set_target_properties (txReader PROPERTIES
         PREFIX ""
-        COMPILE_OPTIONS /wd4251 /W3 /O2 /MD /GL /GR /GF
+        COMPILE_OPTIONS /wd4251 /O2 /MD /GL /GR /GF
         LINK_FLAGS "/machine:x64 /SUBSYSTEM:WINDOWS /dll")
 elseif (APPLE)
diff --git a/oiio-Release-2.1.11.2/src/nuke/txWriter/CMakeLists.txt b/source_subfolder/src/nuke/txWriter/CMakeLists.txt
index 1405d63..a3b50fe 100644
--- a/oiio-Release-2.1.11.2/src/nuke/txWriter/CMakeLists.txt
+++ b/source_subfolder/src/nuke/txWriter/CMakeLists.txt
@@ -13,5 +13,5 @@ if (WIN32)
     set_target_properties (txWriter PROPERTIES
         PREFIX ""
-        COMPILE_OPTIONS /wd4251 /W3 /O2 /MD /GL /GR /GF
+        COMPILE_OPTIONS /wd4251 /O2 /MD /GL /GR /GF
         LINK_FLAGS "/machine:x64 /SUBSYSTEM:WINDOWS /dll")
 elseif (APPLE)
diff --git a/oiio-Release-2.1.11.2/src/openexr.imageio/CMakeLists.txt b/source_subfolder/src/openexr.imageio/CMakeLists.txt
index 3226eb1..bf8e035 100644
--- a/oiio-Release-2.1.11.2/src/openexr.imageio/CMakeLists.txt
+++ b/source_subfolder/src/openexr.imageio/CMakeLists.txt
@@ -4,4 +4,4 @@
 
 add_oiio_plugin (exrinput.cpp exroutput.cpp
-                 LINK_LIBRARIES ${OPENEXR_LIBRARIES})
+                 LINK_LIBRARIES OpenEXR::OpenEXR)
 
